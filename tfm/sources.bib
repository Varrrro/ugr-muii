
@techreport{mell_nist_2011,
	address = {Gaithersburg, USA},
	title = {The {NIST} {Definition} of {Cloud} {Computing}},
	language = {en},
	number = {800-145},
	institution = {National Institute of Standards and Technology},
	author = {Mell, Peter and Grance, Timothy},
	month = sep,
	year = {2011},
	pages = {7},
	file = {Mell and Grance - The NIST Definition of Cloud Computing.pdf:/home/varrrro/Zotero/storage/DJFRWI4I/Mell and Grance - The NIST Definition of Cloud Computing.pdf:application/pdf},
}

@inproceedings{cinque_rt-cases_2019,
	address = {Dagstuhl, Germany},
	series = {Leibniz {International} {Proceedings} in {Informatics} ({LIPIcs})},
	title = {{RT}-{CASEs}: {Container}-{Based} {Virtualization} for {Temporally} {Separated} {Mixed}-{Criticality} {Task} {Sets}},
	volume = {133},
	isbn = {978-3-95977-110-8},
	url = {http://drops.dagstuhl.de/opus/volltexte/2019/10742},
	doi = {10.4230/LIPIcs.ECRTS.2019.5},
	booktitle = {31st {Euromicro} {Conference} on {Real}-{Time} {Systems} ({ECRTS} 2019)},
	publisher = {Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik},
	author = {Cinque, Marcello and Corte, Raffaele Della and Eliso, Antonio and Pecchia, Antonio},
	editor = {Quinton, Sophie},
	year = {2019},
	note = {ISSN: 1868-8969},
	pages = {5:1--5:22},
	file = {Full Text:/home/varrrro/Zotero/storage/3EAQ5ZG3/Cinque et al. - 2019 - RT-CASEs Container-Based Virtualization for Tempo.pdf:application/pdf},
}

@inproceedings{struhar_real-time_2020,
	address = {Dagstuhl, Germany},
	series = {{OpenAccess} {Series} in {Informatics} ({OASIcs})},
	title = {Real-{Time} {Containers}: {A} {Survey}},
	volume = {80},
	isbn = {978-3-95977-144-3},
	url = {https://drops.dagstuhl.de/opus/volltexte/2020/12001},
	doi = {10.4230/OASIcs.Fog-IoT.2020.7},
	booktitle = {2nd {Workshop} on {Fog} {Computing} and the {IoT} ({Fog}-{IoT} 2020)},
	publisher = {Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik},
	author = {Struhár, Václav and Behnam, Moris and Ashjaei, Mohammad and Papadopoulos, Alessandro V.},
	editor = {Cervin, Anton and Yang, Yang},
	year = {2020},
	note = {ISSN: 2190-6807},
	pages = {7:1--7:9},
	file = {Full Text:/home/varrrro/Zotero/storage/B7JXQMD9/Struhár et al. - 2020 - Real-Time Containers A Survey.pdf:application/pdf},
}

@inproceedings{xi_rt-xen_2011,
	address = {Taipei, Taiwan},
	title = {{RT}-{Xen}: towards real-time hypervisor scheduling in {Xen}},
	isbn = {978-1-4503-0714-7},
	shorttitle = {{RT}-{Xen}},
	url = {http://dl.acm.org/citation.cfm?doid=2038642.2038651},
	doi = {10.1145/2038642.2038651},
	abstract = {As system integration becomes an increasingly important challenge for complex real-time systems, there has been a signiﬁcant demand for supporting real-time systems in virtualized environments. This paper presents RT-Xen, the ﬁrst real-time hypervisor scheduling framework for Xen, the most widely used open-source virtual machine monitor (VMM). RT-Xen bridges the gap between real-time scheduling theory and Xen, whose wide-spread adoption makes it an attractive platform for integrating a broad range of real-time and embedded systems. Moreover, RT-Xen provides an opensource platform for researchers and integrators to develop and evaluate real-time scheduling techniques, which to date have been studied predominantly via analysis and simulations. Extensive experimental results demonstrate the feasibility, eﬃciency, and eﬃcacy of ﬁxed-priority hierarchical real-time scheduling in RT-Xen. RT-Xen instantiates a suite of ﬁxed-priority servers (Deferrable Server, Periodic Server, Polling Server, and Sporadic Server). While the server algorithms are not new, this empirical study represents the ﬁrst comprehensive experimental comparison of these algorithms within the same virtualization platform. Our empirical evaluation shows that RT-Xen can provide eﬀective real-time scheduling to guest Linux operating systems at a 1ms quantum, while incurring only moderate overhead for all the ﬁxed-priority server algorithms. While more complex algorithms such as Sporadic Server do incur higher overhead, none of the overhead diﬀerences among diﬀerent server algorithms are signiﬁcant. Deferrable Server generally delivers better soft real-time performance than the other server algorithms, while Periodic Server incurs high deadline miss ratios in overloaded situations.},
	language = {en},
	urldate = {2020-11-03},
	booktitle = {Proceedings of the 9th {ACM} international conference on {Embedded} software - {EMSOFT} '11},
	publisher = {ACM Press},
	author = {Xi, Sisu and Wilson, Justin and Lu, Chenyang and Gill, Christopher},
	month = oct,
	year = {2011},
	pages = {39--48},
	file = {Xi et al. - 2011 - RT-Xen towards real-time hypervisor scheduling in.pdf:/home/varrrro/Zotero/storage/IWK3L8V7/Xi et al. - 2011 - RT-Xen towards real-time hypervisor scheduling in.pdf:application/pdf},
}

@inproceedings{barham_xen_2003,
	address = {New York, USA},
	series = {{SOSP} '03},
	title = {Xen and the art of virtualization},
	isbn = {978-1-58113-757-6},
	url = {https://doi.org/10.1145/945445.945462},
	doi = {10.1145/945445.945462},
	abstract = {Numerous systems have been designed which use virtualization to subdivide the ample resources of a modern computer. Some require specialized hardware, or cannot support commodity operating systems. Some target 100\% binary compatibility at the expense of performance. Others sacrifice security or functionality for speed. Few offer resource isolation or performance guarantees; most provide only best-effort provisioning, risking denial of service.This paper presents Xen, an x86 virtual machine monitor which allows multiple commodity operating systems to share conventional hardware in a safe and resource managed fashion, but without sacrificing either performance or functionality. This is achieved by providing an idealized virtual machine abstraction to which operating systems such as Linux, BSD and Windows XP, can be ported with minimal effort.Our design is targeted at hosting up to 100 virtual machine instances simultaneously on a modern server. The virtualization approach taken by Xen is extremely efficient: we allow operating systems such as Linux and Windows XP to be hosted simultaneously for a negligible performance overhead --- at most a few percent compared with the unvirtualized case. We considerably outperform competing commercial and freely available solutions in a range of microbenchmarks and system-wide tests.},
	language = {en},
	urldate = {2020-11-03},
	booktitle = {Proceedings of the 19th {ACM} symposium on {Operating} systems principles},
	publisher = {ACM Press},
	author = {Barham, Paul and Dragovic, Boris and Fraser, Keir and Hand, Steven and Harris, Tim and Ho, Alex and Neugebauer, Rolf and Pratt, Ian and Warfield, Andrew},
	month = oct,
	year = {2003},
	keywords = {hypervisors, paravirtualization, virtual machine monitors},
	pages = {164--177},
	file = {Barham et al. - 2003 - Xen and the art of virtualization.pdf:/home/varrrro/Zotero/storage/HV7EJ8E8/Barham et al. - 2003 - Xen and the art of virtualization.pdf:application/pdf},
}

@phdthesis{fielding_architectural_2000,
	type = {phd},
	title = {Architectural styles and the design of network-based software architectures},
	abstract = {The World Wide Web has succeeded in large part because its software architecture has been designed to meet the needs of an Internet-scale distributed hypermedia system. The Web has been iteratively developed over the past ten years through a series of modifications to the standards that define its architecture. In order to identify those aspects of the Web that needed improvement and avoid undesirable modifications, a model for the modern Web architecture was needed to guide its design, definition, and deployment. Software architecture research investigates methods for determining how best to partition a system, how components identify and communicate with each other, how information is communicated, how elements of a system can evolve independently, and how all of the above can be described using formal and informal notations. My work is motivated by the desire to understand and evaluate the architectural design of network-based application software through principled use of architectural constraints, thereby obtaining the functional, performance, and social properties desired of an architecture. An architectural style is a named, coordinated set of architectural constraints. This dissertation defines a framework for understanding software architecture via architectural styles and demonstrates how styles can be used to guide the architectural design of network-based application software. A survey of architectural styles for network-based applications is used to classify styles according to the architectural properties they induce on an architecture for distributed hypermedia. I then introduce the Representational State Transfer (REST) architectural style and describe how REST has been used to guide the design and development of the architecture for the modern Web. REST emphasizes scalability of component interactions, generality of interfaces, independent deployment of components, and intermediary components to reduce interaction latency, enforce security, and encapsulate legacy systems. I describe the software engineering principles guiding REST and the interaction constraints chosen to retain those principles, contrasting them to the constraints of other architectural styles. Finally, I describe the lessons learned from applying REST to the design of the Hypertext Transfer Protocol and Uniform Resource Identifier standards, and from their subsequent deployment in Web client and server software.},
	language = {en},
	school = {University of California, Irvine},
	author = {Fielding, Roy Thomas},
	year = {2000},
	note = {AAI9980887
ISBN-10: 0599871180},
}

@article{melnik_fog-computing_2018,
	title = {Fog-computing concept usage as means to enhance information and control system reliability},
	volume = {1015},
	issn = {1742-6596},
	url = {https://doi.org/10.1088%2F1742-6596%2F1015%2F3%2F032175},
	doi = {10.1088/1742-6596/1015/3/032175},
	abstract = {This paper focuses on the reliability issue of information and control systems (ICS). The authors propose using the elements of the fog-computing concept to enhance the reliability function. The key idea of fog-computing is to shift computations to the fog-layer of the network, and thus to decrease the workload of the communication environment and data processing components. As for ICS, workload also can be distributed among sensors, actuators and network infrastructure facilities near the sources of data. The authors simulated typical workload distribution situations for the “traditional” ICS architecture and for the one with fogcomputing concept elements usage. The paper contains some models, selected simulation results and conclusion about the prospects of the fog-computing as a means to enhance ICS reliability.},
	language = {en},
	urldate = {2020-11-04},
	journal = {Journal of Physics: Conference Series},
	author = {Melnik, E. V. and Klimenko, A. B. and Ivanov, D. Ya},
	month = may,
	year = {2018},
	note = {Publisher: IOP Publishing},
	pages = {032175},
	file = {IOP Full Text PDF:/home/varrrro/Zotero/storage/YRYGMB3B/Melnik et al. - 2018 - Fog-computing concept usage as means to enhance in.pdf:application/pdf},
}

@inproceedings{gedeon_fog_2018,
	title = {Fog {Computing}: {Current} {Research} and {Future} {Challenges}},
	shorttitle = {Fog {Computing}},
	abstract = {Acknowledging the shortcomings of cloud computing , recent research efforts have been devoted to fog computing. Motivated by a rapidly increasing number of devices at the extreme edge of the network that imply the need for timely and local processing, fog computing offers a promising solution to move computational capabilities closer to the data generated by those devices. In this vision paper, we summarize these current research efforts, describe applications where fog computing is beneficial and identify future challenges that remain open to bring fog computing to a breakthrough.},
	author = {Gedeon, Julien and Heuschkel, Jens and Wang, Lin and Mühlhäuser, Max},
	month = mar,
	year = {2018},
	file = {Full Text PDF:/home/varrrro/Zotero/storage/739X8MXE/Gedeon et al. - 2018 - Fog Computing Current Research and Future Challen.pdf:application/pdf},
}

@inproceedings{hofer_industrial_2019,
	address = {Sydney, Australia},
	title = {Industrial {Control} via {Application} {Containers}: {Migrating} from {Bare}-{Metal} to {IAAS}},
	isbn = {978-1-72815-011-6},
	shorttitle = {Industrial {Control} via {Application} {Containers}},
	url = {https://ieeexplore.ieee.org/document/8968832/},
	doi = {10.1109/CloudCom.2019.00021},
	abstract = {We explore the challenges and opportunities of shifting industrial control software from dedicated hardware to bare-metal servers or cloud computing platforms using off the shelf technologies. In particular, we demonstrate that executing time-critical applications on cloud platforms is viable based on a series of dedicated latency tests targeting relevant real-time configurations.},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 11th {IEEE} {International} {Conference} on {Cloud} {Computing} {Technology} and {Science} ({CloudCom})},
	publisher = {IEEE},
	author = {Hofer, Florian and Sehr, Martin A. and Iannopollo, Antonio and Ugalde, Ines and Sangiovanni-Vincentelli, Alberto and Russo, Barbara},
	editor = {Chen, Jinjun and Yang, Laurence T.},
	month = dec,
	year = {2019},
	note = {ISSN: 2330-2186},
	pages = {62--69},
	file = {Submitted Version:/home/varrrro/Zotero/storage/RSPLTK57/Hofer et al. - 2019 - Industrial Control via Application Containers Mig.pdf:application/pdf},
}

@inproceedings{gambier_real-time_2004,
	address = {Melbourne, Australia},
	title = {Real-time control systems: a tutorial},
	volume = {2},
	isbn = {0-7803-8873-9},
	shorttitle = {Real-time control systems},
	doi = {10.1109/ASCC.2004.185001},
	abstract = {The literature about real-time systems presents digital control or computer controlled systems as one of its most important practical application field. However, it is very difficult to find in these textbooks real-time control aspects. It seems to be more natural that these applications should be treated as part of digital control courses. In spite of that, control system literature rarely includes extensively the real-time subject and it does normally not pay attention to real-time aspects beyond algorithms and choice of sampling times. The aim of this paper is to highlight important issues about real-time systems that should be taken into account at the moment to implement digital control.},
	language = {en},
	booktitle = {Proceedings of the 5th {Asian} {Control} {Conference} ({IEEE} {Cat}. {No}.{04EX904})},
	publisher = {IEEE},
	author = {Gambier, A.},
	month = jul,
	year = {2004},
	keywords = {Real time systems, real-time systems, Application software, Automatic control, Automation, computer controlled system, Control engineering, control engineering computing, control engineering education, control system literature, Control systems, digital control, Digital control, digital control courses, Laboratories, real-time control system, Software standards, Tutorial},
	pages = {1024--1031},
	file = {IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/HC2VYE8J/1426785.html:text/html;Gambier - 2004 - Real-time control systems a tutorial.pdf:/home/varrrro/Zotero/storage/EUDJWFZB/Gambier - 2004 - Real-time control systems a tutorial.pdf:application/pdf},
}

@article{palencia_response_2005,
	title = {Response time analysis of {EDF} distributed real-time systems},
	volume = {1},
	issn = {1740-4460},
	abstract = {Offset-based response time analysis of tasks scheduled with fixed priorities has demonstrated to be a powerful tool to analyze many task models with different kinds of timing constraints, like regular periodic tasks, suspending tasks, distributed systems, tasks with varying priorities, multiframe models, etc. Offset-based analysis techniques are capable of performing a global schedulability analysis in distributed systems, as opposed to the less efficient techniques that consider each processing or communication resource as independent. In this paper we extend the offset-based schedulability analysis techniques to systems with EDF scheduling, using analytical techniques that are similar to those developed for fixed priority scheduling. With this new analysis, we now have a complete set of techniques to perform the analysis of different task models in distributed heterogeneous systems, i.e., processors and communication networks having either fixed priority or EDF schedulers.},
	language = {en},
	number = {2},
	journal = {Journal of Embedded Computing},
	author = {Palencia, J. C. and Harbour, M. González},
	month = apr,
	year = {2005},
	keywords = {real-time systems, Distributed systems, EDF, schedulability analysis},
	pages = {225--237},
}

@article{casteren_waterfall_2017,
	title = {The {Waterfall} {Model} and the {Agile} {Methodologies} : {A} comparison by project characteristics},
	shorttitle = {The {Waterfall} {Model} and the {Agile} {Methodologies}},
	url = {http://rgdoi.net/10.13140/RG.2.2.36825.72805},
	doi = {10.13140/RG.2.2.36825.72805},
	urldate = {2020-11-14},
	author = {Casteren, Wilfred Van},
	year = {2017},
	note = {Publisher: Unpublished},
	file = {Full Text:/home/varrrro/Zotero/storage/IGR5E2TC/Casteren - 2017 - The Waterfall Model and the Agile Methodologies  .pdf:application/pdf},
}

@inproceedings{anderson_edf-based_2005,
	address = {Palma de Mallorca, Balearic Islands, Spain},
	title = {An {EDF}-based {Scheduling} {Algorithm} for {Multiprocessor} {Soft} {Real}-{Time} {Systems}},
	isbn = {978-0-7695-2400-9},
	url = {http://ieeexplore.ieee.org/document/1508461/},
	doi = {10.1109/ECRTS.2005.6},
	urldate = {2020-11-15},
	booktitle = {17th {Euromicro} {Conference} on {Real}-{Time} {Systems} ({ECRTS}'05)},
	publisher = {IEEE},
	author = {Anderson, J.H. and Bud, V. and Devi, U.C.},
	year = {2005},
	pages = {199--208},
	file = {Anderson et al. - 2005 - An EDF-based Scheduling Algorithm for Multiprocess.pdf:/home/varrrro/Zotero/storage/KYQCI2Y3/Anderson et al. - 2005 - An EDF-based Scheduling Algorithm for Multiprocess.pdf:application/pdf},
}

@article{zhang_schedulability_2009,
	title = {Schedulability {Analysis} for {Real}-{Time} {Systems} with {EDF} {Scheduling}},
	volume = {58},
	issn = {0018-9340},
	url = {http://ieeexplore.ieee.org/document/4815215/},
	doi = {10.1109/TC.2009.58},
	abstract = {Real-time scheduling is the theoretical basis of real-time systems engineering. Earliest deadline first (EDF) is an optimal scheduling algorithm for uniprocessor real-time systems. Existing results on an exact schedulability test for EDF task systems with arbitrary relative deadlines need to calculate the processor demand of the task set at every absolute deadline to check if there is an overflow in a specified time interval. The resulting large number of calculations severely restricts the use of EDF in practice. In this paper, we propose new results on necessary and sufficient schedulability analysis for EDF scheduling; the new results reduce, exponentially, the calculation times, in all situations, for schedulable task sets, and in most situations, for unschedulable task sets. For example, a 16-task system that in the previous analysis had to check 858,331 points (deadlines) can, with the new analysis, be checked at just 12 points. There are no restrictions on the new results: each task can be periodic or sporadic, with relative deadline, which can be less than, equal to, or greater than its period, and task parameters can range over many orders of magnitude.},
	number = {9},
	urldate = {2020-11-15},
	journal = {IEEE Transactions on Computers},
	author = {Zhang, F. and Burns, A.},
	month = sep,
	year = {2009},
	pages = {1250--1258},
	file = {Zhang and Burns - 2009 - Schedulability Analysis for Real-Time Systems with.pdf:/home/varrrro/Zotero/storage/N5TXEF7R/Zhang and Burns - 2009 - Schedulability Analysis for Real-Time Systems with.pdf:application/pdf},
}

@incollection{kao_rate-monotonic_2008,
	address = {Boston, MA},
	title = {Rate-{Monotonic} {Scheduling}},
	isbn = {978-0-387-30770-1 978-0-387-30162-4},
	url = {http://link.springer.com/10.1007/978-0-387-30162-4_334},
	language = {en},
	urldate = {2020-11-15},
	booktitle = {Encyclopedia of {Algorithms}},
	publisher = {Springer US},
	author = {Fisher, Nathan and Baruah, Sanjoy},
	editor = {Kao, Ming-Yang},
	year = {2008},
	doi = {10.1007/978-0-387-30162-4_334},
	pages = {751--754},
}

@inproceedings{cayssials_rate_1999,
	address = {York, UK},
	title = {Rate monotonic scheduling of real-time control systems with the minimum number of priority levels},
	isbn = {978-0-7695-0240-3},
	url = {http://ieeexplore.ieee.org/document/777450/},
	doi = {10.1109/EMRTS.1999.777450},
	urldate = {2020-11-15},
	booktitle = {Proceedings of 11th {Euromicro} {Conference} on {Real}-{Time} {Systems}. {Euromicro} {RTS}'99},
	publisher = {IEEE Comput. Soc},
	author = {Cayssials, R. and Orozco, J. and Santos, J. and Santos, R.},
	year = {1999},
	pages = {54--59},
}

@article{henkel_munichmit_2004,
	title = {Munich/{MIT} {Survey}: {Development} of {Embedded} {Linux}},
	shorttitle = {Munich/{MIT} {Survey}},
	author = {Henkel, Joachim and Tins, M.},
	month = jan,
	year = {2004},
	file = {Henkel and Tins - 2004 - MunichMIT Survey Development of Embedded Linux.pdf:/home/varrrro/Zotero/storage/7HVTSSTS/Henkel and Tins - 2004 - MunichMIT Survey Development of Embedded Linux.pdf:application/pdf},
}

@book{lee_introduction_2016,
	edition = {2},
	title = {Introduction to {Embedded} {Systems}: {A} {Cyber}-{Physical} {Systems} {Approach}},
	isbn = {978-0-262-53381-2},
	shorttitle = {Introduction to {Embedded} {Systems}},
	abstract = {An introduction to the engineering principles of embedded systems, with a focus on modeling, design, and analysis of cyber-physical systems.The most visible use of computers and software is processing information for human consumption. The vast majority of computers in use, however, are much less visible. They run the engine, brakes, seatbelts, airbag, and audio system in your car. They digitally encode your voice and construct a radio signal to send it from your cell phone to a base station. They command robots on a factory floor, power generation in a power plant, processes in a chemical plant, and traffic lights in a city. These less visible computers are called embedded systems, and the software they run is called embedded software. The principal challenges in designing and analyzing embedded systems stem from their interaction with physical processes. This book takes a cyber-physical approach to embedded systems, introducing the engineering concepts underlying embedded systems as a technology and as a subject of study. The focus is on modeling, design, and analysis of cyber-physical systems, which integrate computation, networking, and physical processes. The second edition offers two new chapters, several new exercises, and other improvements. The book can be used as a textbook at the advanced undergraduate or introductory graduate level and as a professional reference for practicing engineers and computer scientists. Readers should have some familiarity with machine structures, computer programming, basic discrete mathematics and algorithms, and signals and systems.},
	language = {en},
	publisher = {MIT Press},
	author = {Lee, Edward Ashford and Seshia, Sanjit A.},
	month = dec,
	year = {2016},
	note = {Google-Books-ID: chPiDQAAQBAJ},
	keywords = {Computers / Computer Science, Technology \& Engineering / Electrical},
	file = {Lee and Seshia - 2016 - Introduction to Embedded Systems A Cyber-Physical.pdf:/home/varrrro/Zotero/storage/GN4QFAKF/Lee and Seshia - 2016 - Introduction to Embedded Systems A Cyber-Physical.pdf:application/pdf},
}

@article{randell_system_1975,
	title = {System structure for software fault tolerance},
	volume = {10},
	issn = {0362-1340, 1558-1160},
	url = {https://dl.acm.org/doi/10.1145/390016.808467},
	doi = {10.1145/390016.808467},
	language = {en},
	number = {6},
	urldate = {2020-11-16},
	journal = {ACM SIGPLAN Notices},
	author = {Randell, B.},
	month = jun,
	year = {1975},
	pages = {437--449},
	file = {Randell - 1975 - System structure for software fault tolerance.pdf:/home/varrrro/Zotero/storage/K5ZIVW44/Randell - 1975 - System structure for software fault tolerance.pdf:application/pdf},
}

@article{amin_review_2019,
	title = {A review of {Fault} {Tolerant} {Control} {Systems}: {Advancements} and applications},
	volume = {143},
	issn = {02632241},
	shorttitle = {A review of {Fault} {Tolerant} {Control} {Systems}},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0263224119304099},
	doi = {10.1016/j.measurement.2019.04.083},
	language = {en},
	urldate = {2020-11-16},
	journal = {Measurement},
	author = {Amin, Arslan Ahmed and Hasan, Khalid Mahmood},
	month = sep,
	year = {2019},
	pages = {58--68},
	file = {Amin and Hasan - 2019 - A review of Fault Tolerant Control Systems Advanc.pdf:/home/varrrro/Zotero/storage/8XK7Y42V/Amin and Hasan - 2019 - A review of Fault Tolerant Control Systems Advanc.pdf:application/pdf},
}

@book{pullum_software_2001,
	title = {Software {Fault} {Tolerance} {Techniques} and {Implementation}},
	isbn = {978-1-58053-137-5},
	abstract = {Look to this innovative resource for the most-comprehensive coverage of software fault tolerance techniques available in a single volume. It offers you a thorough understanding of the operation of critical software fault tolerance techniques and guides you through their design, operation and performance. You get an in-depth discussion on the advantages and disadvantages of specific techniques, so you can decide which ones are best suited for your work.},
	language = {en},
	publisher = {Artech House},
	author = {Pullum, Laura L.},
	year = {2001},
	note = {Google-Books-ID: O50vDwAAQBAJ},
	keywords = {Computers / Software Development \& Engineering / General},
	file = {Pullum - 2001 - Software Fault Tolerance Techniques and Implementa.pdf:/home/varrrro/Zotero/storage/RQSIFAZG/Pullum - 2001 - Software Fault Tolerance Techniques and Implementa.pdf:application/pdf},
}

@inproceedings{shan_survey_2019,
	address = {Naples, Italy},
	title = {A {Survey} on the {Application} of {Safety}, {Security}, and {Privacy} {Standards} for {Dependable} {Systems}},
	isbn = {978-1-72813-929-6},
	url = {https://ieeexplore.ieee.org/document/8893379/},
	doi = {10.1109/EDCC.2019.00023},
	urldate = {2020-11-16},
	booktitle = {2019 15th {European} {Dependable} {Computing} {Conference} ({EDCC})},
	publisher = {IEEE},
	author = {Shan, Lijun and Sangchoolie, Behrooz and Folkesson, Peter and Vinter, Jonny and Schoitsch, Erwin and Loiseaux, Claire},
	month = sep,
	year = {2019},
	pages = {71--72},
	file = {Full Text PDF:/home/varrrro/Zotero/storage/I2DDZA3Y/Shan et al. - 2019 - A Survey on the Application of Safety, Security, a.pdf:application/pdf},
}

@book{wolf_high-performance_2014,
	edition = {2},
	title = {High-{Performance} {Embedded} {Computing}: {Applications} in {Cyber}-{Physical} {Systems} and {Mobile} {Computing}},
	isbn = {978-0-12-410511-9},
	shorttitle = {High-{Performance} {Embedded} {Computing}},
	url = {https://linkinghub.elsevier.com/retrieve/pii/C20120070585},
	language = {en},
	urldate = {2020-11-16},
	publisher = {Elsevier},
	author = {Wolf, Marilyn},
	month = apr,
	year = {2014},
	doi = {10.1016/C2012-0-07058-5},
}

@incollection{hutchison_dependable_2006,
	address = {Berlin, Heidelberg},
	title = {Dependable {Systems}},
	volume = {4028},
	isbn = {978-3-540-36821-2 978-3-540-36823-6},
	url = {http://link.springer.com/10.1007/11808107_2},
	urldate = {2020-11-16},
	booktitle = {Dependable {Systems}: {Software}, {Computing}, {Networks}},
	publisher = {Springer Berlin Heidelberg},
	author = {Schiper, André},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard and Kohlas, Jürg and Meyer, Bertrand and Schiper, André},
	year = {2006},
	doi = {10.1007/11808107_2},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {34--54},
	file = {Submitted Version:/home/varrrro/Zotero/storage/HPTD59CT/Schiper - 2006 - Dependable Systems.pdf:application/pdf},
}

@inproceedings{krotofil_industrial_2013,
	title = {Industrial control systems security: {What} is happening?},
	shorttitle = {Industrial control systems security},
	doi = {10.1109/INDIN.2013.6622964},
	abstract = {Increasing awareness of ICS security issues has brought about a growing body of work in this area, including pioneering contributions based on realistic control system logs and network traces. This paper surveys the state of the art in ICS security research, including efforts of industrial researchers, highlighting the most interesting works. Research efforts are grouped into divergent areas, where we add “secure control” as a new category to capture security goals specific to control systems that differ from security goals in traditional IT systems.},
	booktitle = {2013 11th {IEEE} {International} {Conference} on {Industrial} {Informatics} ({INDIN})},
	author = {Krotofil, M. and Gollmann, D.},
	month = jul,
	year = {2013},
	note = {ISSN: 2378-363X},
	keywords = {industrial control, Control systems, computer network security, control system logs, ICS security issues, industrial control system security, Integrated circuit modeling, IT systems, Malware, Mathematical model, network traces, Process control, Protocols, security goals},
	pages = {670--675},
	file = {IEEE Xplore Full Text PDF:/home/varrrro/Zotero/storage/RV2D6QV2/Krotofil and Gollmann - 2013 - Industrial control systems security What is happe.pdf:application/pdf;IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/VFDTKIY6/6622964.html:text/html},
}

@book{burns_real-time_2009,
	edition = {4},
	title = {Real-time {Systems} and {Programming} {Languages}: {Ada}, {Real}-{Time} {Java} and {C}/{Real}-{Time} {POSIX}},
	isbn = {978-0-321-41745-9},
	shorttitle = {Real-time {Systems} and {Programming} {Languages}},
	abstract = {How do real-time systems differ from normal information systems? Which languages are best for implementing different real-time systems?  The fourth edition of this best-selling text on real-time systems answers these and other questions. It provides an in-depth analysis of the requirements for designing and implementing real-time embedded systems, and discusses how these requirements are met by current languages and operating systems. The languages are not only described, but also critically evaluated. No other book on real-time (or concurrent) programming languages covers the same breadth of material.},
	language = {en},
	publisher = {Addison-Wesley},
	author = {Burns, Alan and Wellings, Andrew J.},
	year = {2009},
	note = {Google-Books-ID: XO9dPgAACAAJ},
	file = {Burns and Wellings - 2009 - Real-time Systems and Programming Languages Ada, .pdf:/home/varrrro/Zotero/storage/XSI5WCGV/Burns and Wellings - 2009 - Real-time Systems and Programming Languages Ada, .pdf:application/pdf},
}

@article{burns_scheduling_1991,
	title = {Scheduling hard real-time systems: a review},
	volume = {6},
	issn = {02686961},
	shorttitle = {Scheduling hard real-time systems},
	url = {https://digital-library.theiet.org/content/journals/10.1049/sej.1991.0015},
	doi = {10.1049/sej.1991.0015},
	language = {en},
	number = {3},
	urldate = {2020-11-16},
	journal = {Software Engineering Journal},
	author = {Burns, A.},
	year = {1991},
	pages = {116},
	file = {Submitted Version:/home/varrrro/Zotero/storage/PSHVPC2R/Burns - 1991 - Scheduling hard real-time systems a review.pdf:application/pdf},
}

@article{reghenzani_real-time_2019,
	title = {The {Real}-{Time} {Linux} {Kernel}: {A} {Survey} on {PREEMPT}\_RT},
	volume = {52},
	issn = {0360-0300, 1557-7341},
	shorttitle = {The {Real}-{Time} {Linux} {Kernel}},
	url = {https://dl.acm.org/doi/10.1145/3297714},
	doi = {10.1145/3297714},
	language = {en},
	number = {1},
	urldate = {2020-11-16},
	journal = {ACM Computing Surveys},
	author = {Reghenzani, Federico and Massari, Giuseppe and Fornaciari, William},
	month = feb,
	year = {2019},
	pages = {1--36},
	file = {Reghenzani et al. - 2019 - The Real-Time Linux Kernel A Survey on PREEMPT_RT.pdf:/home/varrrro/Zotero/storage/GC7SES42/Reghenzani et al. - 2019 - The Real-Time Linux Kernel A Survey on PREEMPT_RT.pdf:application/pdf},
}

@inproceedings{abella_wcet_2015,
	address = {Siegen, Germany},
	title = {{WCET} analysis methods: {Pitfalls} and challenges on their trustworthiness},
	isbn = {978-1-4673-7711-9},
	shorttitle = {{WCET} analysis methods},
	url = {https://ieeexplore.ieee.org/document/7185039},
	doi = {10.1109/SIES.2015.7185039},
	urldate = {2020-11-16},
	booktitle = {10th {IEEE} {International} {Symposium} on {Industrial} {Embedded} {Systems} ({SIES})},
	publisher = {IEEE},
	author = {Abella, Jaume and Hernandez, Carles and Quinones, Eduardo and Cazorla, Francisco J. and Conmy, Philippa Ryan and Azkarate-askasua, Mikel and Perez, Jon and Mezzetti, Enrico and Vardanega, Tullio},
	month = jun,
	year = {2015},
	pages = {1--10},
}

@inproceedings{bernat_wcet_2002,
	address = {Austin, TX, USA},
	title = {{WCET} analysis of probabilistic hard real-time systems},
	isbn = {978-0-7695-1851-0},
	url = {http://ieeexplore.ieee.org/document/1181582/},
	doi = {10.1109/REAL.2002.1181582},
	urldate = {2020-11-16},
	booktitle = {23rd {IEEE} {Real}-{Time} {Systems} {Symposium}, 2002. {RTSS} 2002.},
	publisher = {IEEE Comput. Soc},
	author = {Bernat, G. and Colin, A. and Petters, S.M.},
	year = {2002},
	pages = {279--288},
}

@inproceedings{hambarde_survey_2014,
	address = {Nagpur, India},
	title = {The {Survey} of {Real} {Time} {Operating} {System}: {RTOS}},
	isbn = {978-1-4799-2102-7},
	shorttitle = {The {Survey} of {Real} {Time} {Operating} {System}},
	url = {http://ieeexplore.ieee.org/document/6745342/},
	doi = {10.1109/ICESC.2014.15},
	urldate = {2020-11-16},
	booktitle = {2014 {International} {Conference} on {Electronic} {Systems}, {Signal} {Processing} and {Computing} {Technologies}},
	publisher = {IEEE},
	author = {Hambarde, Prasanna and Varma, Rachit and Jha, Shivani},
	month = jan,
	year = {2014},
	pages = {34--39},
	file = {Hambarde et al. - 2014 - The Survey of Real Time Operating System RTOS.pdf:/home/varrrro/Zotero/storage/RQN2JCJS/Hambarde et al. - 2014 - The Survey of Real Time Operating System RTOS.pdf:application/pdf},
}

@inproceedings{burns_mixed_2015,
	title = {Mixed {Criticality} {Systems} - {A} {Review}},
	author = {Burns, A. and Davis, Robert I.},
	year = {2015},
	file = {Burns and Davis - 2015 - Mixed Criticality Systems - A Review.pdf:/home/varrrro/Zotero/storage/KLTSHH6D/Burns and Davis - 2015 - Mixed Criticality Systems - A Review.pdf:application/pdf},
}

@inproceedings{vestal_preemptive_2007,
	address = {Tucson, AZ, USA},
	title = {Preemptive {Scheduling} of {Multi}-criticality {Systems} with {Varying} {Degrees} of {Execution} {Time} {Assurance}},
	isbn = {978-0-7695-3062-8},
	url = {http://ieeexplore.ieee.org/document/4408308/},
	doi = {10.1109/RTSS.2007.47},
	abstract = {This paper is based on a conjecture that the more conﬁdence one needs in a task execution time bound (the less tolerant one is of missed deadlines), the larger and more conservative that bound tends to become in practice. We assume diﬀerent tasks perform functions having diﬀerent criticalities and requiring diﬀerent levels of assurance. We assume a task may have a set of alternative worst-case execution times, each assured to a diﬀerent level of conﬁdence. This paper presents ways to use this information to obtain more precise schedulability analysis and more eﬃcient preemptive ﬁxed priority scheduling. These methods are evaluated using workloads abstracted from production avionics systems.},
	language = {en},
	urldate = {2020-11-22},
	booktitle = {28th {IEEE} {International} {Real}-{Time} {Systems} {Symposium} ({RTSS} 2007)},
	publisher = {IEEE},
	author = {Vestal, Steve},
	month = dec,
	year = {2007},
	pages = {239--243},
	file = {Vestal - 2007 - Preemptive Scheduling of Multi-criticality Systems.pdf:/home/varrrro/Zotero/storage/BZ92CEC5/Vestal - 2007 - Preemptive Scheduling of Multi-criticality Systems.pdf:application/pdf},
}

@article{geer_survey_2004,
	title = {Survey: {Embedded} {Linux} {Ahead} of the {Pack}},
	volume = {5},
	issn = {1541-4922},
	shorttitle = {Survey},
	url = {http://ieeexplore.ieee.org/document/1355908/},
	doi = {10.1109/MDSO.2004.28},
	number = {10},
	urldate = {2020-11-22},
	journal = {IEEE Distributed Systems Online},
	author = {Geer, D.},
	month = oct,
	year = {2004},
	pages = {3--3},
	file = {Geer - 2004 - Survey Embedded Linux Ahead of the Pack.pdf:/home/varrrro/Zotero/storage/FQYXCRDM/Geer - 2004 - Survey Embedded Linux Ahead of the Pack.pdf:application/pdf},
}

@article{piggin_are_2015,
	title = {Are industrial control systems ready for the cloud?},
	volume = {9},
	issn = {18745482},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S1874548214000821},
	doi = {10.1016/j.ijcip.2014.12.005},
	language = {en},
	urldate = {2020-11-22},
	journal = {International Journal of Critical Infrastructure Protection},
	author = {Piggin, Richard},
	month = jun,
	year = {2015},
	pages = {38--40},
	file = {Piggin - 2015 - Are industrial control systems ready for the cloud.pdf:/home/varrrro/Zotero/storage/JVDYJIRV/Piggin - 2015 - Are industrial control systems ready for the cloud.pdf:application/pdf},
}

@inproceedings{yi_fog_2015,
	title = {Fog {Computing}: {Platform} and {Applications}},
	shorttitle = {Fog {Computing}},
	doi = {10.1109/HotWeb.2015.22},
	abstract = {Despite the broad utilization of cloud computing, some applications and services still cannot benefit from this popular computing paradigm due to inherent problems of cloud computing such as unacceptable latency, lack of mobility support and location-awareness. As a result, fog computing, has emerged as a promising infrastructure to provide elastic resources at the edge of network. In this paper, we have discussed current definitions of fog computing and similar concepts, and proposed a more comprehensive definition. We also analyzed the goals and challenges in fog computing platform, and presented platform design with several exemplar applications. We finally implemented and evaluated a prototype fog computing platform.},
	booktitle = {2015 {Third} {IEEE} {Workshop} on {Hot} {Topics} in {Web} {Systems} and {Technologies} ({HotWeb})},
	author = {Yi, S. and Hao, Z. and Qin, Z. and Li, Q.},
	month = nov,
	year = {2015},
	keywords = {Servers, cloud computing, broad utilization, Cloud computing, computing paradigm, Delays, edge computing, elastic resource, fog computing, location-awareness, Logic gates, mobile cloud computing, Mobile communication, mobile computing, mobility support, platform design, prototype fog computing platform, Real-time systems, Virtualization},
	pages = {73--78},
	file = {Full Text:/home/varrrro/Zotero/storage/RAJ345U8/Yi et al. - 2015 - Fog Computing Platform and Applications.pdf:application/pdf;IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/IK2M8ZNQ/7372286.html:text/html},
}

@article{pop_enabling_2018,
	title = {Enabling {Fog} {Computing} for {Industrial} {Automation} {Through} {Time}-{Sensitive} {Networking} ({TSN})},
	volume = {2},
	issn = {2471-2833},
	doi = {10.1109/MCOMSTD.2018.1700057},
	abstract = {In this article, we advocate for the use of IEEE 802.1 Time-Sensitive Networking (TSN) as deterministic transport for the network layer of fog computing in industrial automation. We give an overview of the relevant TSN protocol services and motivate the use of TSN. We propose a configuration agent architecture based on IEEE 802.1Qcc and OPC Unified Architecture (OPC UA), capable of performing runtime network configuration. We briefly present the configuration challenges for scheduled networks (considering a subset of TSN mechanisms), and illustrate one problem: the configuration of schedule tables of such networks for hard real-time control applications. We propose a list scheduling-based heuristic to solve this problem. Our evaluation and comparison to previous work demonstrate the feasibility of reconfiguring the scheduled network at runtime for industrial applications within the fog.},
	number = {2},
	journal = {IEEE Communications Standards Magazine},
	author = {Pop, P. and Raagaard, M. L. and Gutierrez, M. and Steiner, W.},
	month = jun,
	year = {2018},
	note = {Conference Name: IEEE Communications Standards Magazine},
	keywords = {Cloud computing, fog computing, Real-time systems, Computer architecture, configuration agent architecture, deterministic transport, distributed processing, Edge computing, factory automation, IEEE 802.1 Time-Sensitive Networking, IEEE 802.1Qcc, IEEE standards, industrial automation, list scheduling-based heuristic, OPC UA, OPC Unified Architecture, production engineering computing, real-time control applications, Runtime, runtime network configuration, schedule tables, scheduled network, Sensitivity analysis, Telecommunication network management, Time-Sensitive Networking, TSN mechanisms, TSN protocol services},
	pages = {55--61},
	file = {IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/BWGNVAIA/8412464.html:text/html},
}

@article{tseng_lightweight_2018,
	title = {A {Lightweight} {Autoscaling} {Mechanism} for {Fog} {Computing} in {Industrial} {Applications}},
	volume = {14},
	issn = {1941-0050},
	doi = {10.1109/TII.2018.2799230},
	abstract = {Fog computing provides a more flexible service environment than cloud computing. The lightweight fog environment is suitable for industrial applications. In order to strengthen service scalability, container virtualization has been proposed and studied in recent years. It is vital to explore the tradeoff between service scalability and operating expenses. This paper integrates the hypervisor technique with container virtualization, and constructs an integrated virtualization (IV) fog platform for deploying industrial applications based on the virtual network function. This paper presents a fuzzy-based real-time autoscaling (FRAS) mechanism and implements it in the IV fog platform. The FRAS mechanism provides a dynamic, rapid, lightweight, and low-cost solution to the service autoscaling problem. Experimental results showed that the proposed FRAS mechanism yields a better service scale with lower average delay, error rate, and operating expenses compared to other autoscaling schemes.},
	number = {10},
	journal = {IEEE Transactions on Industrial Informatics},
	author = {Tseng, F. and Tsai, M. and Tseng, C. and Yang, Y. and Liu, C. and Chou, L.},
	month = oct,
	year = {2018},
	note = {Conference Name: IEEE Transactions on Industrial Informatics},
	keywords = {Virtual machine monitors, virtualisation, cloud computing, Containers, Cloud computing, fog computing, Virtualization, Computer architecture, distributed processing, Autoscaling, computer centres, container virtualization, dynamic cost solution, flexible service environment, FRAS mechanism yields, fuzzy set theory, fuzzy theory, fuzzy-based real-time autoscaling mechanism, hypervisor technique, industrial applications, integrated virtualization fog platform, IV fog platform, Libraries, lightweight autoscaling mechanism, lightweight cost solution, lightweight fog environment, low-cost solution, operating expenses, rapid cost solution, Scalability, service autoscaling problem, service scalability, virtual network function, virtual network function (VNF)},
	pages = {4529--4537},
	file = {IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/H7KYBK3V/8272512.html:text/html},
}

@article{wang_traffic_2019,
	title = {Traffic and {Computation} {Co}-{Offloading} {With} {Reinforcement} {Learning} in {Fog} {Computing} for {Industrial} {Applications}},
	volume = {15},
	issn = {1941-0050},
	doi = {10.1109/TII.2018.2883991},
	abstract = {In the past decade, network data communication has experienced a rapid growth, which has led to explosive congestion in heterogeneous networks. Moreover, the emerging industrial applications, such as automatic driving put forward higher requirements on both networks and devices. On the contrary, running computation-intensive industrial applications locally are constrained by the limited resources of devices. Correspondingly, fog computing has recently emerged to reduce the congestion of content-centric networks. It has proven to be a good way in industry and traffic for reducing network delay and processing time. In addition, device-to-device offloading is viewed as a promising paradigm to transmit network data in mobile environment, especially for autodriving vehicles. In this paper, jointly taking both the network traffic and computation workload of industrial traffic into consideration, we explore a fundamental tradeoff between energy consumption and service delay when provisioning mobile services in vehicular networks. In particular, when the available resource in mobile vehicles becomes a bottleneck, we propose a novel model to depict the users' willingness of contributing their resources to the public. We then formulate a cost minimization problem by exploiting the framework of Markov decision progress (MDP) and propose the dynamic reinforcement learning scheduling algorithm and the deep dynamic scheduling algorithm to solve the offloading decision problem. By adopting different mobile trajectory traces, we conduct extensive simulations to evaluate the performance of the proposed algorithms. The results show that our proposed algorithms outperform other benchmark schemes in the mobile edge networks.},
	number = {2},
	journal = {IEEE Transactions on Industrial Informatics},
	author = {Wang, Y. and Wang, K. and Huang, H. and Miyazaki, T. and Guo, S.},
	month = feb,
	year = {2019},
	note = {Conference Name: IEEE Transactions on Industrial Informatics},
	keywords = {Servers, cloud computing, Delays, fog computing, Edge computing, autodriving vehicles, automatic driving, Computation offloading, computation workload, computation-intensive industrial applications, content-centric networks, cost minimization problem, data communication, deep dynamic scheduling algorithm, Device-to-device communication, device-to-device offloading, dynamic reinforcement learning scheduling algorithm, energy consumption, Energy consumption, explosive congestion, heterogeneous networks, industrial application, industrial traffic, learning (artificial intelligence), Markov decision progress framework, Markov processes, minimisation, mobile edge networks, mobile environment, Mobile handsets, mobile radio, mobile services, mobile trajectory, mobile trajectory traces, mobile vehicles, network data communication, network delay reduction, network traffic, offloading decision problem, reinforcement learning (RL), service delay, Task analysis, telecommunication computing, telecommunication scheduling, telecommunication traffic, traffic offloading, vehicular networks},
	pages = {976--986},
	file = {IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/JRBTBCPZ/8552454.html:text/html},
}

@article{shi_edge_2019,
	title = {Edge {Computing} [{Scanning} the {Issue}]},
	volume = {107},
	issn = {1558-2256},
	doi = {10.1109/JPROC.2019.2928287},
	abstract = {In recent years, with the proliferation of the Internet of Things (IoT) and the wide penetration of wireless networks, the number of edge devices and the data generated from the edge have been growing rapidly. According to International Data Corporation (IDC) prediction [20], global data will reach 180 zettabytes (ZB), and 70\% of the data generated by IoT will be processed on the edge of the network by 2025. IDC also forecasts that more than 150 billion devices will be connected worldwide by 2025. In this case, the centralized processing mode based on cloud computing is not efficient enough to handle the data generated by the edge. The centralized processing model uploads all data to the cloud data center through the network and leverages its supercomputing power to solve the computing and storage problems, which enables the cloud services to create economic benefits. However, in the context of IoT, traditional cloud computing has several shortcomings.},
	number = {8},
	journal = {Proceedings of the IEEE},
	author = {Shi, W. and Pallis, G. and Xu, Z.},
	month = aug,
	year = {2019},
	note = {Conference Name: Proceedings of the IEEE},
	keywords = {Edge computing, Ecosystems, Internet of Things, Machine learning, Privacy, Resource management, Software defined networking, Special issues and sections},
	pages = {1474--1481},
	file = {IEEE Xplore Full Text PDF:/home/varrrro/Zotero/storage/F9WZYYD6/Shi et al. - 2019 - Edge Computing [Scanning the Issue].pdf:application/pdf;IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/2948N29B/8789742.html:text/html},
}

@article{shi_edge_2016,
	title = {Edge {Computing}: {Vision} and {Challenges}},
	volume = {3},
	issn = {2327-4662},
	shorttitle = {Edge {Computing}},
	url = {http://ieeexplore.ieee.org/document/7488250/},
	doi = {10.1109/JIOT.2016.2579198},
	abstract = {The proliferation of Internet of Things (IoT) and the success of rich cloud services have pushed the horizon of a new computing paradigm, edge computing, which calls for processing the data at the edge of the network. Edge computing has the potential to address the concerns of response time requirement, battery life constraint, bandwidth cost saving, as well as data safety and privacy. In this paper, we introduce the deﬁnition of edge computing, followed by several case studies, ranging from cloud ofﬂoading to smart home and city, as well as collaborative edge to materialize the concept of edge computing. Finally, we present several challenges and opportunities in the ﬁeld of edge computing, and hope this paper will gain attention from the community and inspire more research in this direction.},
	language = {en},
	number = {5},
	urldate = {2020-11-22},
	journal = {IEEE Internet of Things Journal},
	author = {Shi, Weisong and Cao, Jie and Zhang, Quan and Li, Youhuizi and Xu, Lanyu},
	month = oct,
	year = {2016},
	pages = {637--646},
	file = {Shi et al. - 2016 - Edge Computing Vision and Challenges.pdf:/home/varrrro/Zotero/storage/5RAISR22/Shi et al. - 2016 - Edge Computing Vision and Challenges.pdf:application/pdf},
}

@article{khan_edge_2019,
	title = {Edge computing: {A} survey},
	volume = {97},
	issn = {0167739X},
	shorttitle = {Edge computing},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167739X18319903},
	doi = {10.1016/j.future.2019.02.050},
	language = {en},
	urldate = {2020-11-22},
	journal = {Future Generation Computer Systems},
	author = {Khan, Wazir Zada and Ahmed, Ejaz and Hakak, Saqib and Yaqoob, Ibrar and Ahmed, Arif},
	month = aug,
	year = {2019},
	pages = {219--235},
	file = {Khan et al. - 2019 - Edge computing A survey.pdf:/home/varrrro/Zotero/storage/S5C4863W/Khan et al. - 2019 - Edge computing A survey.pdf:application/pdf},
}

@inproceedings{stanciu_blockchain_2017,
	address = {Bucharest, Romania},
	title = {Blockchain {Based} {Distributed} {Control} {System} for {Edge} {Computing}},
	isbn = {978-1-5386-1839-4},
	url = {http://ieeexplore.ieee.org/document/7968630/},
	doi = {10.1109/CSCS.2017.102},
	abstract = {Edge computing proposes a novel model for providing computational resources close to end devices that are connected to the network. It has numerous applications in Internet of Things, as well as smart grids, healthcare, smart home, etc. This paper presents ongoing research regarding the use of blockchain technology as a platform hierarchical and distributed control systems based on IEC 61499 standard. Hyperledger Fabric was selected as the blockchain solution, where function blocks are to be implemented as smart contracts on a supervisor level. The integration with the edge nodes that perform on the executive level responsible for actual process control is based on a micro-services architecture where Docker containers implement function blocks, and Kubernetes platform is used for orchestrating the execution of containers across the edge resources.},
	language = {en},
	urldate = {2020-11-22},
	booktitle = {2017 21st {International} {Conference} on {Control} {Systems} and {Computer} {Science} ({CSCS})},
	publisher = {IEEE},
	author = {Stanciu, Alexandru},
	month = may,
	year = {2017},
	pages = {667--671},
	file = {Stanciu - 2017 - Blockchain Based Distributed Control System for Ed.pdf:/home/varrrro/Zotero/storage/TSYQ8JEV/Stanciu - 2017 - Blockchain Based Distributed Control System for Ed.pdf:application/pdf},
}

@inproceedings{khan_perspective_2016,
	address = {Rome, Italy},
	title = {A {Perspective} on {Industry} 4.0: {From} {Challenges} to {Opportunities} in {Production} {Systems}:},
	isbn = {978-989-758-183-0},
	shorttitle = {A {Perspective} on {Industry} 4.0},
	url = {http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0005929704410448},
	doi = {10.5220/0005929704410448},
	language = {en},
	urldate = {2020-11-22},
	booktitle = {Proceedings of the {International} {Conference} on {Internet} of {Things} and {Big} {Data}},
	publisher = {SCITEPRESS - Science and and Technology Publications},
	author = {Khan, Ateeq and Turowski, Klaus},
	year = {2016},
	pages = {441--448},
	file = {Khan and Turowski - 2016 - A Perspective on Industry 4.0 From Challenges to .pdf:/home/varrrro/Zotero/storage/U9RMQMCJ/Khan and Turowski - 2016 - A Perspective on Industry 4.0 From Challenges to .pdf:application/pdf},
}

@article{aazam_deploying_2018,
	title = {Deploying {Fog} {Computing} in {Industrial} {Internet} of {Things} and {Industry} 4.0},
	volume = {14},
	issn = {1941-0050},
	doi = {10.1109/TII.2018.2855198},
	abstract = {Rapid technological advances have revolutionized the industrial sector. These advances range from automation of industrial processes to autonomous industrial processes, where a human input is not required. Internet of Things (IoT), which has emerged a few years ago, has been embraced by industry, resulting in what is known as the Industrial Internet of Things (IIoT). IIoT refers to making industrial processes and entities part of the Internet. Restricting the definition of IIoT to manufacturing yields another subset of IoT, known as Industry 4.0. IIoT and Industry 4.0, will consist of sensor networks, actuators, robots, machines, appliances, business processes, and personnel. Hence, a lot of data of diverse nature would be generated. The industrial process requires most of the tasks to be performed locally because of delay and security requirements and structured data to be communicated over the Internet to web services and the cloud. To achieve this task, middleware support is required between the industrial environment and the cloud/web services. In this context, fog is a potential middleware that can be very useful for different industrial scenarios. Fog can provide local processing support with acceptable latency to actuators and robots in a manufacturing industry. Additionally, as industrial big data are often unstructured, it can be trimmed and refined by the fog locally, before sending it to the cloud. We present an architectural overview of IIoT and Industry 4.0. We discuss how fog can provide local computing support in the IIoT environment and the core elements and building blocks of IIoT. We also present a few interesting prospective use cases of IIoT. Finally, we discuss some emerging research challenges related to IIoT.},
	number = {10},
	journal = {IEEE Transactions on Industrial Informatics},
	author = {Aazam, M. and Zeadally, S. and Harras, K. A.},
	month = oct,
	year = {2018},
	note = {Conference Name: IEEE Transactions on Industrial Informatics},
	keywords = {cloud computing, fog computing, mobile computing, Task analysis, Internet of Things, Industries, Industry 4.0, Actuators, autonomous industrial processes, Big Data, business processes, Cloud of Things (CoT), IIoT, industrial Big Data, industrial environment, Industrial Internet of Things, industrial internet of things (IIoT), industrial process, industrial sector, industry 4.0, local processing support, manufacturing industry, middleware, Middleware, Robot sensing systems, Web services},
	pages = {4674--4682},
	file = {IEEE Xplore Abstract Record:/home/varrrro/Zotero/storage/VGU2HVCP/8410462.html:text/html},
}

@article{lu_industry_2017,
	title = {Industry 4.0: {A} survey on technologies, applications and open research issues},
	volume = {6},
	issn = {2452414X},
	shorttitle = {Industry 4.0},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2452414X17300043},
	doi = {10.1016/j.jii.2017.04.005},
	language = {en},
	urldate = {2020-11-22},
	journal = {Journal of Industrial Information Integration},
	author = {Lu, Yang},
	month = jun,
	year = {2017},
	pages = {1--10},
	file = {Lu - 2017 - Industry 4.0 A survey on technologies, applicatio.pdf:/home/varrrro/Zotero/storage/V3MJSV7H/Lu - 2017 - Industry 4.0 A survey on technologies, applicatio.pdf:application/pdf},
}

@article{verba_modeling_2019,
	title = {Modeling industry 4.0 based fog computing environments for application analysis and deployment},
	volume = {91},
	issn = {0167739X},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167739X18303297},
	doi = {10.1016/j.future.2018.08.043},
	language = {en},
	urldate = {2020-11-22},
	journal = {Future Generation Computer Systems},
	author = {Verba, Nandor and Chao, Kuo-Ming and Lewandowski, Jacek and Shah, Nazaraf and James, Anne and Tian, Feng},
	month = feb,
	year = {2019},
	pages = {48--60},
	file = {Accepted Version:/home/varrrro/Zotero/storage/BRCX2U6R/Verba et al. - 2019 - Modeling industry 4.0 based fog computing environm.pdf:application/pdf;1-s2.0-S0167739X18303297-main.pdf:/home/varrrro/Zotero/storage/KJXG24IA/1-s2.0-S0167739X18303297-main.pdf:application/pdf},
}

@article{farsi_industry_2019,
	title = {Industry 4.0: {Some} {Challenges} and {Opportunities} for {Reliability} {Engineering}},
	volume = {2},
	shorttitle = {Industry 4.0},
	url = {http://www.ijrrs.com/article_91148.html},
	doi = {10.30699/IJRRS.2.1.4},
	abstract = {According to the development of Industry 4.0 and increase the integration of digital, physical and human worlds, reliability engineering must evolve for addressing the existing and future challenges about that. In this paper, the principle of Industry 4.0 is presented and some of these challenges and opportunities for reliability engineering are discussed. New directions for research in system modeling, big data analysis, health management, cyber-physical system, human-machine interaction, uncertainty, jointly optimization, communication, and interfaces are proposed. Each topic can be investigated individually, but this paper summarizes them and prepared a vision about reliability engineering for consideration and discussion by the interested scientific community.},
	language = {en},
	number = {1},
	urldate = {2020-11-22},
	journal = {International Journal of Reliability, Risk and Safety: Theory and Application},
	author = {Farsi, Mohammad Ali and Zio, Enrico},
	month = dec,
	year = {2019},
	pages = {23--34},
	file = {Farsi and Zio - 2019 - Industry 4.0 Some Challenges and Opportunities fo.pdf:/home/varrrro/Zotero/storage/8VPW9HDE/Farsi and Zio - 2019 - Industry 4.0 Some Challenges and Opportunities fo.pdf:application/pdf},
}

@article{randal_ideal_2020,
	title = {The {Ideal} {Versus} the {Real}: {Revisiting} the {History} of {Virtual} {Machines} and {Containers}},
	volume = {53},
	issn = {0360-0300, 1557-7341},
	shorttitle = {The {Ideal} {Versus} the {Real}},
	url = {http://arxiv.org/abs/1904.12226},
	doi = {10.1145/3365199},
	abstract = {The common perception in both academic literature and the industry today is that virtual machines offer better security, while containers offer better performance. However, a detailed review of the history of these technologies and the current threats they face reveals a different story. This survey covers key developments in the evolution of virtual machines and containers from the 1950s to today, with an emphasis on countering modern misperceptions with accurate historical details and providing a solid foundation for ongoing research into the future of secure isolation for multitenant infrastructures, such as cloud and container deployments.},
	number = {1},
	urldate = {2020-11-24},
	journal = {ACM Computing Surveys},
	author = {Randal, Allison},
	month = may,
	year = {2020},
	note = {arXiv: 1904.12226},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Networking and Internet Architecture},
	pages = {1--31},
	file = {arXiv Fulltext PDF:/home/varrrro/Zotero/storage/TPP5HEQ9/Randal - 2020 - The Ideal Versus the Real Revisiting the History .pdf:application/pdf;arXiv.org Snapshot:/home/varrrro/Zotero/storage/IVLHW9XY/1904.html:text/html},
}

@article{popek_formal_1974,
	title = {Formal requirements for virtualizable third generation architectures},
	volume = {17},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/361011.361073},
	doi = {10.1145/361011.361073},
	abstract = {Virtual machine systems have been implemented on a limited number of third generation computer systems, e.g. CP-67 on the IBM 360/67. From previous empirical studies, it is known that certain third generation computer systems, e.g. the DEC PDP-10, cannot support a virtual machine system. In this paper, model of a third-generation-like computer system is developed. Formal techniques are used to derive precise sufficient conditions to test whether such an architecture can support virtual machines.},
	number = {7},
	urldate = {2020-11-24},
	journal = {Communications of the ACM},
	author = {Popek, Gerald J. and Goldberg, Robert P.},
	month = jul,
	year = {1974},
	keywords = {abstract model, formal requirements, hypervisor, operating system, proof, sensitive instruction, third generation architecture, virtual machine, virtual machine monitor, virtual memory},
	pages = {412--421},
	file = {Popek - 1974 - Formal Requirements for Virtualizable Third Genera.pdf:/home/varrrro/Zotero/storage/99V5LKWI/Popek - 1974 - Formal Requirements for Virtualizable Third Genera.pdf:application/pdf},
}

@misc{noauthor_deadline_nodate,
	title = {Deadline {Task} {Scheduling}},
	url = {https://www.kernel.org/doc/html/latest/scheduler/sched-deadline.html},
	language = {en},
	urldate = {2020-11-24},
	journal = {The Linux Kernel documentation},
	file = {Deadline Task Scheduling — The Linux Kernel documentation:/home/varrrro/Zotero/storage/CCZ7NG2B/sched-deadline.html:text/html},
}

@inproceedings{manco_my_2017,
	address = {New York, NY, USA},
	series = {{SOSP} '17},
	title = {My {VM} is {Lighter} (and {Safer}) than your {Container}},
	isbn = {978-1-4503-5085-3},
	url = {https://doi.org/10.1145/3132747.3132763},
	doi = {10.1145/3132747.3132763},
	abstract = {Containers are in great demand because they are lightweight when compared to virtual machines. On the downside, containers offer weaker isolation than VMs, to the point where people run containers in virtual machines to achieve proper isolation. In this paper, we examine whether there is indeed a strict tradeoff between isolation (VMs) and efficiency (containers). We find that VMs can be as nimble as containers, as long as they are small and the toolstack is fast enough. We achieve lightweight VMs by using unikernels for specialized applications and with Tinyx, a tool that enables creating tailor-made, trimmed-down Linux virtual machines. By themselves, lightweight virtual machines are not enough to ensure good performance since the virtualization control plane (the toolstack) becomes the performance bottleneck. We present LightVM, a new virtualization solution based on Xen that is optimized to offer fast boot-times regardless of the number of active VMs. LightVM features a complete redesign of Xen's control plane, transforming its centralized operation to a distributed one where interactions with the hypervisor are reduced to a minimum. LightVM can boot a VM in 2.3ms, comparable to fork/exec on Linux (1ms), and two orders of magnitude faster than Docker. LightVM can pack thousands of LightVM guests on modest hardware with memory and CPU usage comparable to that of processes.},
	urldate = {2020-11-24},
	booktitle = {Proceedings of the 26th {Symposium} on {Operating} {Systems} {Principles}},
	publisher = {Association for Computing Machinery},
	author = {Manco, Filipe and Lupu, Costin and Schmidt, Florian and Mendes, Jose and Kuenzer, Simon and Sati, Sumit and Yasukata, Kenichi and Raiciu, Costin and Huici, Felipe},
	month = oct,
	year = {2017},
	keywords = {containers, hypervisor, operating systems, specialization, unikernels, virtual machine, Virtualization, Xen},
	pages = {218--233},
	file = {Full Text PDF:/home/varrrro/Zotero/storage/9HHNMHKJ/Manco et al. - 2017 - My VM is Lighter (and Safer) than your Container.pdf:application/pdf},
}

@article{kozhirbayev_performance_2017,
	title = {A performance comparison of container-based technologies for the {Cloud}},
	volume = {68},
	issn = {0167739X},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167739X16303041},
	doi = {10.1016/j.future.2016.08.025},
	language = {en},
	urldate = {2020-11-24},
	journal = {Future Generation Computer Systems},
	author = {Kozhirbayev, Zhanibek and Sinnott, Richard O.},
	month = mar,
	year = {2017},
	pages = {175--182},
	file = {Kozhirbayev and Sinnott - 2017 - A performance comparison of container-based techno.pdf:/home/varrrro/Zotero/storage/DS5T5PVA/Kozhirbayev and Sinnott - 2017 - A performance comparison of container-based techno.pdf:application/pdf},
}

@inproceedings{felter_updated_2015,
	address = {Philadelphia, PA, USA},
	title = {An updated performance comparison of virtual machines and {Linux} containers},
	isbn = {978-1-4799-1957-4},
	url = {http://ieeexplore.ieee.org/document/7095802/},
	doi = {10.1109/ISPASS.2015.7095802},
	urldate = {2020-11-24},
	booktitle = {2015 {IEEE} {International} {Symposium} on {Performance} {Analysis} of {Systems} and {Software} ({ISPASS})},
	publisher = {IEEE},
	author = {Felter, Wes and Ferreira, Alexandre and Rajamony, Ram and Rubio, Juan},
	month = mar,
	year = {2015},
	pages = {171--172},
	file = {Submitted Version:/home/varrrro/Zotero/storage/39YP6JIZ/Felter et al. - 2015 - An updated performance comparison of virtual machi.pdf:application/pdf},
}
